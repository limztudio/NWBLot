// limztudio@gmail.com
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#include "graphics.h"

#include <logger/client/logger.h>

#include "vulkan/engine.h"


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


NWB_CORE_BEGIN


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Graphics::Graphics()
    : m_swapchainWidth(0)
    , m_swapchainHeight(0)
    , m_swapchainImageCount(0)
    , m_presentMode(PresentMode::VSync)
{
    m_engine = makeUnique<VulkanEngine>(this);
}
Graphics::~Graphics(){}

bool Graphics::init(const Common::FrameData& data){ return m_engine->init(data); }
void Graphics::destroy(){ m_engine.reset(); }


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


NWB_CORE_END


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

