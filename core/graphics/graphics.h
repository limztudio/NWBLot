// limztudio@gmail.com
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#pragma once


#include "common.h"

#include <core/alloc/alloc.h>


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


NWB_CORE_BEGIN


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


class VulkanEngine;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


class Graphics{
    friend VulkanEngine;


public:
    static constexpr const u32 s_maxDynamicAllocSize = 64 * 1024 * 1024;


public:
    Graphics();
    ~Graphics();


public:
    bool init(const Common::FrameData& data);
    void destroy();


private:
    Alloc::MemoryArena m_memArena;

private:
    u16 m_swapchainWidth;
    u16 m_swapchainHeight;
    u8 m_swapchainImageCount;

    PresentMode::Enum m_presentMode;

private:
    UniquePtr<VulkanEngine> m_engine;
};


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


NWB_CORE_END


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

